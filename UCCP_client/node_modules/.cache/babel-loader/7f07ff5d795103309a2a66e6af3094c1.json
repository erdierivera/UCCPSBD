{"ast":null,"code":"import _classCallCheck from\"C:/Project/UCCP_Membership/UCCPSBD/UCCP_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Project/UCCP_Membership/UCCPSBD/UCCP_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Project/UCCP_Membership/UCCPSBD/UCCP_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Project/UCCP_Membership/UCCPSBD/UCCP_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{Modal}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";var ModalPopup=/*#__PURE__*/function(_Component){_inherits(ModalPopup,_Component);var _super=_createSuper(ModalPopup);function ModalPopup(props){var _this;_classCallCheck(this,ModalPopup);_this=_super.call(this,props);_this.isShowModal=function(status){_this.handleClose();_this.setState({showModal:status});};_this.handleClose=function(){_this.props.onPopupClose(false);};_this.state={showModal:false};return _this;}_createClass(ModalPopup,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(Modal,{show:this.props.showModalPopup,onHide:this.handleClose,size:\"lg\",\"aria-labelledby\":\"contained-modal-title-vcenter\",animation:true,children:/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(\"div\",{className:\"signUp\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Member recorded successfully\"})})})})});}}]);return ModalPopup;}(Component);export default ModalPopup;","map":{"version":3,"sources":["C:/Project/UCCP_Membership/UCCPSBD/UCCP_client/src/pages/modal_popup.jsx"],"names":["React","Component","Fragment","Modal","ModalPopup","props","isShowModal","status","handleClose","setState","showModal","onPopupClose","state","showModalPopup"],"mappings":"ooBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,KAAT,KAAsB,iBAAtB,C,8CAEMC,CAAAA,U,wGACF,oBAAYC,KAAZ,CAAmB,4CACf,uBAAMA,KAAN,EADe,MAOnBC,WAPmB,CAOL,SAACC,MAAD,CAAY,CACtB,MAAKC,WAAL,GACA,MAAKC,QAAL,CAAc,CAAEC,SAAS,CAAEH,MAAb,CAAd,EACH,CAVkB,OAYnBC,WAZmB,CAYL,UAAM,CAChB,MAAKH,KAAL,CAAWM,YAAX,CAAwB,KAAxB,EACH,CAdkB,CAEf,MAAKC,KAAL,CAAa,CACTF,SAAS,CAAE,KADF,CAAb,CAFe,aAKlB,C,6CAYD,iBAAS,CACL,mBACI,KAAC,QAAD,wBACI,KAAC,KAAD,EAAO,IAAI,CAAE,KAAKL,KAAL,CAAWQ,cAAxB,CAAwC,MAAM,CAAE,KAAKL,WAArD,CACI,IAAI,CAAC,IADT,CAEI,kBAAgB,+BAFpB,CAGI,SAAS,KAHb,uBAUI,KAAC,KAAD,CAAO,IAAP,wBAEI,YAAK,SAAS,CAAC,QAAf,uBACI,mDADJ,EAFJ,EAVJ,EADJ,EADJ,CAyBH,C,wBA5CoBP,S,EA+CzB,cAAeG,CAAAA,UAAf","sourcesContent":["import React, { Component, Fragment } from 'react';  \r\nimport { Modal } from 'react-bootstrap';  \r\n  \r\nclass ModalPopup extends Component {  \r\n    constructor(props) {  \r\n        super(props);  \r\n        this.state = {  \r\n            showModal: false  \r\n        };  \r\n    }  \r\n  \r\n    isShowModal = (status) => {  \r\n        this.handleClose();  \r\n        this.setState({ showModal: status });  \r\n    }  \r\n  \r\n    handleClose = () => {  \r\n        this.props.onPopupClose(false);  \r\n    }  \r\n  \r\n  \r\n    render() {  \r\n        return (  \r\n            <Fragment>  \r\n                <Modal show={this.props.showModalPopup} onHide={this.handleClose}  \r\n                    size=\"lg\"  \r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    animation\r\n                >  \r\n                    {/* <Modal.Header closeButton>  \r\n                        <Modal.Title id=\"sign-in-title\">  \r\n                            React Modal Pop up Example  \r\n                         </Modal.Title>  \r\n                    </Modal.Header>   */}\r\n                    <Modal.Body>  \r\n                        {/* <hr />   */}\r\n                        <div className=\"signUp\">  \r\n                            <p>Member recorded successfully\r\n                                {/* <button type=\"button\" className=\"link-button\" onClick={() => this.isShowModal(true)}> Close</button> */}\r\n                                </p>  \r\n                        </div>  \r\n                    </Modal.Body>  \r\n  \r\n                </Modal >  \r\n            </Fragment >  \r\n  \r\n        );  \r\n    }  \r\n}  \r\n  \r\nexport default ModalPopup"]},"metadata":{},"sourceType":"module"}
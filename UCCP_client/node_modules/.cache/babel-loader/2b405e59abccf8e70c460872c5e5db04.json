{"ast":null,"code":"import _objectSpread from\"C:/Project/UCCP_Membership/UCCPSBD/UCCP_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Project/UCCP_Membership/UCCPSBD/UCCP_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"C:/Project/UCCP_Membership/UCCPSBD/UCCP_client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CheckboxContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: inline-block;\\n  vertical-align: middle;\\n\"])));var Icon=styled.svg(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  fill: none;\\n  stroke: black;\\n  stroke-width: 4px;\\n\"])));// Hide checkbox visually but remain accessible to screen readers.\n// Source: https://polished.js.org/docs/#hidevisually\nvar HiddenCheckbox=styled.input.attrs({type:'checkbox'})(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  clippath: inset(50%);\\n  height: 5px;\\n  margin: 5px;\\n  overflow: hidden;\\n  padding: 1;\\n  position: absolute;\\n  white-space: nowrap;\\n  width: 5px;\\n\"])));var StyledCheckbox=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: inline-block;\\n  width: 26px;\\n  height: 26px;\\n  background: \",\"\\n  border-radius: 3px;\\n  transition: all 150ms;\\n\\n  \",\":focus + & {\\n    box-shadow: 0 0 0 3px black;\\n  }\\n\\n  \",\" {\\n    visibility: \",\"\\n  }\\n\"])),function(props){return props.checked?'salmon':'papayawhip';},HiddenCheckbox,Icon,function(props){return props.checked?'visible':'hidden';});var Checkbox=function Checkbox(_ref){var className=_ref.className,checked=_ref.checked,props=_objectWithoutProperties(_ref,[\"className\",\"checked\"]);return/*#__PURE__*/_jsxs(CheckboxContainer,{className:className,children:[/*#__PURE__*/_jsx(HiddenCheckbox,_objectSpread({checked:checked},props)),/*#__PURE__*/_jsx(StyledCheckbox,{checked:checked,children:/*#__PURE__*/_jsx(Icon,{viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"polyline\",{points:\"20 6 9 17 4 12\"})})})]});};export default Checkbox;","map":{"version":3,"sources":["C:/Project/UCCP_Membership/UCCPSBD/UCCP_client/src/pages/member/checkbox.jsx"],"names":["React","styled","CheckboxContainer","div","Icon","svg","HiddenCheckbox","input","attrs","type","StyledCheckbox","props","checked","Checkbox","className"],"mappings":"ylBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAEA,GAAMC,CAAAA,iBAAiB,CAAGD,MAAM,CAACE,GAAV,wHAAvB,CAKA,GAAMC,CAAAA,IAAI,CAAGH,MAAM,CAACI,GAAV,4HAAV,CAKA;AACA;AACA,GAAMC,CAAAA,cAAc,CAAGL,MAAM,CAACM,KAAP,CAAaC,KAAb,CAAmB,CAAEC,IAAI,CAAE,UAAR,CAAnB,CAAH,sQAApB,CAaA,GAAMC,CAAAA,cAAc,CAAGT,MAAM,CAACE,GAAV,qSAIJ,SAAAQ,KAAK,QAAKA,CAAAA,KAAK,CAACC,OAAN,CAAgB,QAAhB,CAA2B,YAAhC,EAJD,CAQhBN,cARgB,CAYhBF,IAZgB,CAaF,SAAAO,KAAK,QAAKA,CAAAA,KAAK,CAACC,OAAN,CAAgB,SAAhB,CAA4B,QAAjC,EAbH,CAApB,CAiBA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcF,OAAd,MAAcA,OAAd,CAA0BD,KAA1B,2EACf,MAAC,iBAAD,EAAmB,SAAS,CAAEG,SAA9B,wBACE,KAAC,cAAD,gBAAgB,OAAO,CAAEF,OAAzB,EAAsCD,KAAtC,EADF,cAEE,KAAC,cAAD,EAAgB,OAAO,CAAEC,OAAzB,uBACE,KAAC,IAAD,EAAM,OAAO,CAAC,WAAd,uBACE,iBAAU,MAAM,CAAC,gBAAjB,EADF,EADF,EAFF,GADe,EAAjB,CAWA,cAAeC,CAAAA,QAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`\r\n\r\nconst Icon = styled.svg`\r\n  fill: none;\r\n  stroke: black;\r\n  stroke-width: 4px;\r\n`\r\n// Hide checkbox visually but remain accessible to screen readers.\r\n// Source: https://polished.js.org/docs/#hidevisually\r\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 5px;\r\n  margin: 5px;\r\n  overflow: hidden;\r\n  padding: 1;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 5px;\r\n`\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: inline-block;\r\n  width: 26px;\r\n  height: 26px;\r\n  background: ${props => (props.checked ? 'salmon' : 'papayawhip')}\r\n  border-radius: 3px;\r\n  transition: all 150ms;\r\n\r\n  ${HiddenCheckbox}:focus + & {\r\n    box-shadow: 0 0 0 3px black;\r\n  }\r\n\r\n  ${Icon} {\r\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')}\r\n  }\r\n`\r\n\r\nconst Checkbox = ({ className, checked, ...props }) => (\r\n  <CheckboxContainer className={className}>\r\n    <HiddenCheckbox checked={checked} {...props} />\r\n    <StyledCheckbox checked={checked}>\r\n      <Icon viewBox=\"0 0 24 24\">\r\n        <polyline points=\"20 6 9 17 4 12\" />\r\n      </Icon>\r\n    </StyledCheckbox>\r\n  </CheckboxContainer>\r\n)\r\n\r\nexport default Checkbox\r\n"]},"metadata":{},"sourceType":"module"}
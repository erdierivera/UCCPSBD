{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\UCCP_Membership\\\\UCCPSBD\\\\UCCP_client\\\\src\\\\pages\\\\organization\\\\OrganizationsList.jsx\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table-6';\nimport api from '../../api';\nimport styled from 'styled-components';\nimport 'react-table-6/react-table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    padding:130px 50px 50px 50px; \n    position: relative;\n`;\n_c = Wrapper;\nconst GetOrgMembers = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`;\n_c2 = GetOrgMembers;\n\nclass GetOrganizationMembers extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMembersByOrg = event => {\n      event.preventDefault();\n      window.location.href = `/member/orgmembers/${this.props.id}`;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(GetOrgMembers, {\n      onClick: this.getMembersByOrg,\n      children: this.props.accessor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass OrganizationsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.getAllOrganizations().then(organizations => {\n        this.setState({\n          organizations: organizations.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      organizations: [],\n      columns: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      organizations,\n      isLoading\n    } = this.state;\n    const columns = [// {\n    //     Header: 'ID',\n    //     accessor: '_id',\n    //     filterable: true,\n    // },\n    {\n      Header: 'Abbreviation',\n      accessor: '',\n      Cell: function (props) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(GetOrganizationMembers, {\n            id: props.original.organizationId,\n            accessor: props.original.abbreviation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this);\n      },\n      headerStyle: {},\n      filterable: true,\n      width: '150'\n    }, {\n      Header: 'Name',\n      accessor: 'name',\n      filterable: true,\n      width: '30%'\n    }];\n    let showTable = true;\n\n    if (!organizations.length) {\n      showTable = false;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: showTable && /*#__PURE__*/_jsxDEV(ReactTable, {\n        data: organizations,\n        columns: columns,\n        loading: isLoading,\n        defaultPageSize: 10,\n        showPageSizeOptions: true,\n        minRows: 0,\n        filterable: false,\n        className: \"-highlight -striped\",\n        getTdProps: () => ({\n          style: {\n            textAlign: 'center',\n            fontSize: '12px'\n          }\n        }),\n        getTheadThProps: () => ({\n          style: {\n            textAlign: 'center',\n            fontSize: '12px'\n          }\n        }),\n        getTheadFilterProps: () => ({\n          style: {\n            textAlign: 'center',\n            fontSize: '12px'\n          }\n        }),\n        getPaginationProps: () => ({\n          style: {\n            textAlign: 'center',\n            fontSize: '12px'\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OrganizationsList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"GetOrgMembers\");","map":{"version":3,"sources":["C:/Project/UCCP_Membership/UCCPSBD/UCCP_client/src/pages/organization/OrganizationsList.jsx"],"names":["React","Component","ReactTable","api","styled","Wrapper","div","GetOrgMembers","GetOrganizationMembers","getMembersByOrg","event","preventDefault","window","location","href","props","id","render","accessor","OrganizationsList","constructor","componentDidMount","setState","isLoading","getAllOrganizations","then","organizations","data","state","columns","Header","Cell","original","organizationId","abbreviation","headerStyle","filterable","width","showTable","length","style","textAlign","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactTable from 'react-table-6'\r\nimport api from '../../api'\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport 'react-table-6/react-table.css'\r\n\r\nconst Wrapper = styled.div`\r\n    padding:130px 50px 50px 50px; \r\n    position: relative;\r\n`\r\n\r\nconst GetOrgMembers = styled.div`\r\n    color: #ef9b0f;\r\n    cursor: pointer;\r\n`\r\n\r\nclass GetOrganizationMembers extends Component {\r\n    getMembersByOrg = event => {\r\n        event.preventDefault()\r\n\r\n        window.location.href = `/member/orgmembers/${this.props.id}`\r\n    }\r\n\r\n    render() {\r\n        return <GetOrgMembers onClick={this.getMembersByOrg}>{this.props.accessor}</GetOrgMembers>\r\n    }\r\n}\r\n\r\nclass OrganizationsList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            organizations: [],\r\n            columns: [],\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({ isLoading: true })\r\n\r\n        await api.getAllOrganizations().then(organizations => {\r\n            this.setState({\r\n                organizations: organizations.data.data,\r\n                isLoading: false,\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { organizations, isLoading } = this.state\r\n        const columns = [\r\n            // {\r\n            //     Header: 'ID',\r\n            //     accessor: '_id',\r\n            //     filterable: true,\r\n            // },\r\n            {\r\n                Header: 'Abbreviation',\r\n                accessor: '',\r\n                Cell: function(props){\r\n                    return (\r\n                        <span>\r\n                            <GetOrganizationMembers id={props.original.organizationId} accessor={props.original.abbreviation}/>\r\n                        </span>\r\n                    )\r\n                },\r\n                headerStyle: {\r\n                    },\r\n                filterable: true,\r\n                width: '150'\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'name',\r\n                filterable: true,\r\n                width: '30%'\r\n            },\r\n        ]\r\n\r\n        let showTable = true\r\n        if (!organizations.length) {\r\n            showTable = false\r\n        }\r\n\r\n        return (\r\n            <Wrapper>\r\n                {showTable && (\r\n                    <ReactTable\r\n                        data={organizations}\r\n                        columns={columns}\r\n                        loading={isLoading}\r\n                        defaultPageSize={10}\r\n                        showPageSizeOptions={true}\r\n                        minRows={0}\r\n                        filterable={false}\r\n                        className=\"-highlight -striped\"\r\n                        getTdProps={() => ({\r\n                            style: {\r\n                            textAlign: 'center',\r\n                            fontSize: '12px',\r\n                            }\r\n                            })}\r\n                            \r\n                        getTheadThProps={() => ({\r\n                            style: {\r\n                            textAlign: 'center',\r\n                            fontSize: '12px',\r\n                            }\r\n                            })}\r\n                        getTheadFilterProps={() => ({\r\n                            style: {\r\n                            textAlign: 'center',\r\n                            fontSize: '12px',\r\n                            }\r\n                            })}\r\n                        getPaginationProps={() => ({\r\n                            style: {\r\n                            textAlign: 'center',\r\n                            fontSize: '12px',\r\n                            }\r\n                            })}\r\n                    />\r\n                )}\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrganizationsList"]},"metadata":{},"sourceType":"module"}
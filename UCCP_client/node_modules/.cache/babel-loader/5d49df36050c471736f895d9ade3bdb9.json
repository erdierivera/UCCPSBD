{"ast":null,"code":"import { Valid, Letter, AlphaNumeric, Email, CustomRx, Numeric, Required, Dummy } from '../Function';\nimport React, { Component } from 'react';\nexport class AlphaNumericInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      errorStatus: '',\n      errorMsg: true\n    };\n  }\n\n  Valid(data) {\n    let result = AlphaNumeric(data, this.props.min ? this.props.min : null, this.props.max ? this.props.max : null);\n    console.warn(\"result\", result);\n\n    if (result.status) {\n      this.setState({\n        errorStatus: false,\n        errorMsg: ''\n      });\n    } else {\n      this.setState({\n        errorStatus: true,\n        errorMsg: result.msg\n      });\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange();\n    }\n  } // onChange: (e) => this.Valid(e.target.value, this.props.min ? this.props.min : null, this.props.max ? this.props.max : null),\n\n\n  render() {\n    let data = this.props;\n    let collection = React.createElement(\"div\", {}, React.createElement(\"span\", {\n      className: this.props.class ? this.props.class : 'error-span'\n    }, this.state.errorMsg), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.Valid(e.target.value),\n      onBlur: e => this.props.return(this.state.errorStatus)\n    }));\n    return collection;\n  }\n\n}","map":{"version":3,"sources":["C:/Project/UCCPSBDMembership/client/node_modules/react-js-validator/src/inputs/AlphaNumericInput.js"],"names":["Valid","Letter","AlphaNumeric","Email","CustomRx","Numeric","Required","Dummy","React","Component","AlphaNumericInput","constructor","props","state","input","errorStatus","errorMsg","data","result","min","max","console","warn","status","setState","msg","onChange","render","collection","createElement","className","class","type","e","target","value","onBlur","return"],"mappings":"AAAA,SACIA,KADJ,EAEIC,MAFJ,EAGIC,YAHJ,EAIIC,KAJJ,EAKIC,QALJ,EAKcC,OALd,EAMIC,QANJ,EAMcC,KANd,QAOO,aAPP;AASA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,MAAMC,iBAAN,SAAgCD,SAAhC,CAA0C;AAC7CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AACDhB,EAAAA,KAAK,CAACiB,IAAD,EAAO;AACR,QAAIC,MAAM,GAAGhB,YAAY,CAACe,IAAD,EAAO,KAAKL,KAAL,CAAWO,GAAX,GAAgB,KAAKP,KAAL,CAAWO,GAA3B,GAA+B,IAAtC,EAA4C,KAAKP,KAAL,CAAWQ,GAAX,GAAgB,KAAKR,KAAL,CAAWQ,GAA3B,GAA+B,IAA3E,CAAzB;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuBJ,MAAvB;;AACA,QAAIA,MAAM,CAACK,MAAX,EAAmB;AACf,WAAKC,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAE,KAAf;AAAsBC,QAAAA,QAAQ,EAAE;AAAhC,OAAd;AACH,KAFD,MAGK;AACD,WAAKQ,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAE,IAAf;AAAqBC,QAAAA,QAAQ,EAAEE,MAAM,CAACO;AAAtC,OAAd;AAEH;;AACD,QAAI,KAAKb,KAAL,CAAWc,QAAf,EAAyB;AACrB,WAAKd,KAAL,CAAWc,QAAX;AACH;AACJ,GAtB4C,CAuB7C;;;AAEAC,EAAAA,MAAM,GAAG;AAEL,QAAIV,IAAI,GAAG,KAAKL,KAAhB;AACA,QAAIgB,UAAU,GAAGpB,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B,EAA3B,EACbrB,KAAK,CAACqB,aAAN,CAAoB,MAApB,EAA4B;AAAEC,MAAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWmB,KAAX,GAAmB,KAAKnB,KAAL,CAAWmB,KAA9B,GAAsC;AAAnD,KAA5B,EAA+F,KAAKlB,KAAL,CAAWG,QAA1G,CADa,EAEbR,KAAK,CAACqB,aAAN,CAAoB,OAApB,EAA6B;AACzBG,MAAAA,IAAI,EAAE,MADmB;AAEzBN,MAAAA,QAAQ,EAAGO,CAAD,IAAO,KAAKjC,KAAL,CAAWiC,CAAC,CAACC,MAAF,CAASC,KAApB,CAFQ;AAGzBC,MAAAA,MAAM,EAAGH,CAAD,IAAO,KAAKrB,KAAL,CAAWyB,MAAX,CAAkB,KAAKxB,KAAL,CAAWE,WAA7B;AAHU,KAA7B,CAFa,CAAjB;AASA,WAAQa,UAAR;AACH;;AAtC4C","sourcesContent":["import {\n    Valid,\n    Letter,\n    AlphaNumeric,\n    Email,\n    CustomRx, Numeric,\n    Required, Dummy\n} from '../Function'\n\nimport React, { Component } from 'react';\nexport class AlphaNumericInput extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            input: '',\n            errorStatus: '',\n            errorMsg: true\n        }\n    }\n    Valid(data) {\n        let result = AlphaNumeric(data, this.props.min ?this.props.min:null, this.props.max ?this.props.max:null);\n        console.warn(\"result\", result)\n        if (result.status) {\n            this.setState({ errorStatus: false, errorMsg: '' })\n        }\n        else {\n            this.setState({ errorStatus: true, errorMsg: result.msg })\n\n        }\n        if (this.props.onChange) {\n            this.props.onChange()\n        }\n    }\n    // onChange: (e) => this.Valid(e.target.value, this.props.min ? this.props.min : null, this.props.max ? this.props.max : null),\n    \n    render() {\n        \n        let data = this.props\n        let collection = React.createElement(\"div\", {},\n            React.createElement(\"span\", { className: this.props.class ? this.props.class : 'error-span' }, this.state.errorMsg),\n            React.createElement(\"input\", {\n                type: \"text\",\n                onChange: (e) => this.Valid(e.target.value),\n                onBlur: (e) => this.props.return(this.state.errorStatus)\n            }\n            )\n        )\n        return (collection)\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}
[{"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\index.js":"1","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\reportWebVitals.js":"2","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\app\\index.js":"3","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\components\\index.js":"4","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\organization\\index.js":"5","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\membershiptype\\index.js":"6","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\index.js":"7","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\components\\Links.jsx":"8","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\components\\NavBar.jsx":"9","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\components\\Logo.jsx":"10","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\organization\\OrganizationsList.jsx":"11","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\HomePage.jsx":"12","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\MemberInsert.jsx":"13","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\membershiptype\\MembershipTypeList.jsx":"14","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\MembersList.jsx":"15","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\OrgMembersList.jsx":"16","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\MemberUpdate.jsx":"17","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\TypeMembersList.jsx":"18","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\checkbox.jsx":"19","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\modal_popup.jsx":"20","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\api\\index.js":"21","C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\MemberInfo.jsx":"22"},{"size":438,"mtime":1661739936487,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1661739936502,"results":"25","hashOfConfig":"24"},{"size":1374,"mtime":1661862230098,"results":"26","hashOfConfig":"24"},{"size":119,"mtime":1661739936484,"results":"27","hashOfConfig":"24"},{"size":129,"mtime":1661739936501,"results":"28","hashOfConfig":"24"},{"size":132,"mtime":1661739936498,"results":"29","hashOfConfig":"24"},{"size":405,"mtime":1661862078168,"results":"30","hashOfConfig":"24"},{"size":1694,"mtime":1661739936481,"results":"31","hashOfConfig":"24"},{"size":702,"mtime":1661922920241,"results":"32","hashOfConfig":"24"},{"size":444,"mtime":1661860454391,"results":"33","hashOfConfig":"24"},{"size":4232,"mtime":1661922941364,"results":"34","hashOfConfig":"24"},{"size":452,"mtime":1661853406861,"results":"35","hashOfConfig":"24"},{"size":16826,"mtime":1661921205162,"results":"36","hashOfConfig":"24"},{"size":4155,"mtime":1661922936547,"results":"37","hashOfConfig":"24"},{"size":8763,"mtime":1662034982985,"results":"38","hashOfConfig":"24"},{"size":8647,"mtime":1662035237188,"results":"39","hashOfConfig":"24"},{"size":14399,"mtime":1661919024161,"results":"40","hashOfConfig":"24"},{"size":8674,"mtime":1662035235612,"results":"41","hashOfConfig":"24"},{"size":1385,"mtime":1661739936495,"results":"42","hashOfConfig":"24"},{"size":1625,"mtime":1661739936499,"results":"43","hashOfConfig":"24"},{"size":1135,"mtime":1661868833079,"results":"44","hashOfConfig":"24"},{"size":8539,"mtime":1661864364081,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"zldwmy",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\index.js",[],["92","93"],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\reportWebVitals.js",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\app\\index.js",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\components\\index.js",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\organization\\index.js",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\membershiptype\\index.js",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\index.js",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\components\\Links.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\components\\NavBar.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\components\\Logo.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\organization\\OrganizationsList.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\HomePage.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\MemberInsert.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\membershiptype\\MembershipTypeList.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\MembersList.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\OrgMembersList.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\MemberUpdate.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\TypeMembersList.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\checkbox.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\modal_popup.jsx",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\api\\index.js",[],"C:\\Project\\UCCP_Membership\\UCCPSBD\\UCCP_client\\src\\pages\\member\\MemberInfo.jsx",["94"],"import React, { Component } from 'react'\r\nimport api from '../../api'\r\n\r\nimport styled from 'styled-components'\r\nimport ModalPopup from '../modal_popup';  \r\nimport Checkbox from './checkbox'\r\nconst Title = styled.h1.attrs({\r\n    className: 'h4',\r\n})``\r\n\r\nconst Wrapper = styled.div.attrs({\r\n    className: 'form-group'\r\n})`\r\n    padding:130px 50px 50px 50px; \r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst InputWrapper = styled.div.attrs({\r\n    className: 'form-group form-inline'\r\n})`\r\n    margin: 5px 20px;\r\n    font-size: 13px;\r\n`\r\n\r\nconst MarriageWrapper = styled.div.attrs({\r\n    id: 'marriageWrapper'\r\n})`\r\n    display: none;\r\n`\r\n\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n    width: 150px;\r\n`\r\n\r\nconst InputText = styled.input.attrs({\r\n    className: 'form-control',\r\n})`\r\n    margin-right: 5px;\r\n    width: 300px;\r\n    display: inline-block;\r\n    border-radius: 10px!important;\r\n    ::placeholder {\r\n        color: grey;\r\n        font-style:italic;\r\n        font-size: small;\r\n      };\r\n      \r\n    font-size: 13px;\r\n`\r\n\r\nconst ButtonWrapper = styled.div.attrs({\r\n    className: ``,\r\n})`\r\n    float: right;\r\n`\r\n\r\nconst Button = styled.button.attrs({\r\n    className: `btn btn-primary`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nconst CancelButton = styled.a.attrs({\r\n    className: `btn btn-danger`,\r\n})`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nclass MemberInfo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            firstName: '',\r\n            middleName: '',\r\n            lastName: '',\r\n            birthday: '',\r\n            occupation: '',\r\n            baptismDate: '',\r\n            baptizedBy: '',\r\n            organizationId: '',\r\n            memberTypeId: '',\r\n            isActive: false,\r\n            civilStatus: '',\r\n            weddingDate: '',\r\n            spouse: '',\r\n            age: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const { id } = this.state\r\n        const member = await api.getMemberById(id)\r\n        \r\n        this.setState({\r\n            firstName: member.data.data.firstName,\r\n            middleName: member.data.data.middleName,\r\n            lastName: member.data.data.lastName,\r\n            birthday: member.data.data.birthday,\r\n            occupation: member.data.data.occupation,\r\n            baptismDate: member.data.data.baptismDate,\r\n            baptizedBy: member.data.data.baptizedBy,\r\n            organizationId: member.data.data.organizationId || '',\r\n            memberTypeId: member.data.data.memberTypeId || '',\r\n            isActive: member.data.data.isActive || false,\r\n            civilStatus: member.data.data.civilStatus || '',\r\n            weddingDate: member.data.data.weddingDate || '',\r\n            spouse: member.data.data.spouse || '',\r\n            age: member.data.data.age\r\n        })\r\n\r\n        if(this.state.civilStatus.toLowerCase() === 'married')\r\n            {\r\n                document.getElementById(\"marriageWrapper\").style.display = 'block';\r\n            }\r\n            else        \r\n            {\r\n                document.getElementById(\"marriageWrapper\").style.display = 'none';\r\n                this.setState({ weddingDate: '' })\r\n                this.setState({ spouse: '' })\r\n            }\r\n    }\r\n\r\n    render() {        \r\n        const { firstName, middleName, lastName, birthday, occupation, baptismDate, baptizedBy, organizationId, memberTypeId, isActive, civilStatus, weddingDate, spouse, age } = this.state\r\n        \r\n        return(\r\n            <Wrapper>                \r\n                <ModalPopup  \r\n                    showModalPopup={this.state.showModalPopup}  \r\n                    onPopupClose={this.isShowPopup}  \r\n                >\r\n                </ModalPopup>\r\n                <Title>Member Details</Title>\r\n\r\n                <div style={{ fontFamily: 'system-ui' }}>\r\n                    <label>\r\n                    <Checkbox\r\n                        checked={isActive}\r\n                        readOnly={true}\r\n                    />\r\n                    <span style={{ marginLeft: 8 }}>Is Active?</span>\r\n                    </label>\r\n                </div>\r\n\r\n                <InputWrapper>\r\n                    <Label>First Name: </Label>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={firstName}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n\r\n                <InputWrapper>\r\n                <Label>Middle Name: </Label> \r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={middleName}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n\r\n                <InputWrapper>\r\n                <Label>Last Name: </Label>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={lastName}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n                <InputWrapper>\r\n                <Label>Birthday: </Label>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={birthday}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n                \r\n                <InputWrapper>\r\n                <Label>Age: </Label>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={age}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n\r\n                <InputWrapper>\r\n                <Label>Date of Baptism: </Label>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={baptismDate}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n\r\n                <InputWrapper>\r\n                <Label>Baptized By: </Label>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={baptizedBy}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n\r\n                <InputWrapper>\r\n                    <Label>Occupation: </Label>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={occupation}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n                <InputWrapper>\r\n                    <Label>Organization: </Label>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={organizationId}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n                <InputWrapper>\r\n                    <Label>Membership Type: </Label>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={memberTypeId}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n                <InputWrapper>\r\n                    <Label>Civil Status: </Label>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        value={civilStatus}\r\n                        readOnly={true}\r\n                    />\r\n                </InputWrapper>\r\n                <MarriageWrapper>\r\n                    <InputWrapper>\r\n                        <Label>Wedding Date: </Label>\r\n                        <InputText\r\n                            type=\"text\"\r\n                            value={weddingDate}\r\n                            readOnly={true}\r\n                        />\r\n                    </InputWrapper>\r\n                    <InputWrapper>\r\n                        <Label>Spouse: </Label>\r\n                        <InputText\r\n                            type=\"text\"\r\n                            value={spouse}\r\n                            readOnly={true}\r\n                        />\r\n                    </InputWrapper>\r\n                </MarriageWrapper>\r\n                <ButtonWrapper>\r\n                    {/* <Button onClick={this.handleUpdateMember}>Update Member</Button> */}\r\n                    <CancelButton href={'/members/list'}>Back</CancelButton>\r\n                </ButtonWrapper>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemberInfo",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":62,"column":7,"nodeType":"101","messageId":"102","endLine":62,"endColumn":13},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Button' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]